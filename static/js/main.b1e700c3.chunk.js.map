{"version":3,"sources":["reportWebVitals.js","components/notFound.jsx","components/common/alienButton.jsx","components/home/homeBody.jsx","components/home/home.jsx","components/resume/resumeBody.jsx","components/resume/resume.jsx","components/common/readMore.jsx","components/common/card.jsx","components/projects/projectsBody.jsx","components/projects/projects.jsx","components/contact/contactBody.jsx","components/contact/contact.jsx","components/common/navBar.jsx","components/typingTest/game.jsx","components/typingTest/finished.jsx","components/typingTest/typingTest.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NotFound","id","className","handleLink","externalLink","sendUserTo","pathname","AlienButton","name","targetValue","pageOnWebsite","Fragment","to","target","rel","href","HomeBody","Home","options","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","ResumeBody","Resume","ReadMore","readMoreID","array","useState","readMoreLess","setReadMoreLess","handleReadMore","data-toggle","role","aria-expanded","aria-controls","prevState","Card","header","title","text","buttonID","split","length","wordCounter","handleSecondHalf","finalArray","howManyToSplice","spliceArray","splice","i","textArray","handleFirstHalf","ProjectsBody","cardID","cards","map","card","Projects","ContactBody","Contact","NavBar","Game","content","handleInput","input","timer","setTimer","minutes","correctCharacters","WPM","setWPM","userInput","useEffect","setTimeout","Math","round","character","index","onInput","event","autoFocus","spellCheck","autoCapitalize","autoCorrect","autoComplete","Finished","TypingTest","bibleVerses","state","setState","setContent","setInput","floor","newState","filter","App","path","component","exact","from","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1e700c3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div id=\"content-pages-background\">\r\n            <div id=\"not-found\" className=\"container text-center\" >\r\n                <h1>Not Found</h1>\r\n                <p>You have entered in an invalid URL</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// *** MUST have the alien-button styles for this to work\r\n// Look at parameters to see what will be included\r\n/* Example = 4 props total ... 1 has a default value\r\n        <AlienButton \r\n            name=\"Typing Speed Test\"   // Text on the button\r\n            sendUserTo=\"https://onlinegdb.com/r1BexqSov\" // IMPORTANT ... sending to external link, you cannot have / in the beginning ... sending to a path on the site, make sure to have / in the beginning\r\n            externalLink=\"true\"   // true or false if it is an external link or not\r\n            targetValue=\"_blank\"   // IMPORTANT ... external links MUST have _blank in order to work ... Cut out this code if you want user to stay on the page and not open in a new tab or window\r\n        />\r\n*/\r\n\r\n\r\nconst AlienButton = ({ name, sendUserTo, externalLink, targetValue = \"_self\", pageOnWebsite }) => {   // targetValue will default to not open the link in another tab or window\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                pageOnWebsite === false ?\r\n                    <Link to={handleLink(externalLink, sendUserTo)} target={targetValue} rel=\"noreferrer\">\r\n                        <button id=\"alien-button\">\r\n                            {name}\r\n                        </button>\r\n                    </Link>\r\n\r\n                    : <a href={sendUserTo} target={targetValue} rel=\"noreferrer\">\r\n                        <button id=\"alien-button\">\r\n                            {name}\r\n                        </button>\r\n                    </a>   \r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst handleLink = (externalLink, sendUserTo) => {\r\n    if (externalLink) return { pathname: sendUserTo };\r\n    if (!externalLink) return sendUserTo;\r\n};\r\n\r\nexport default AlienButton;\r\n\r\n","import React from 'react';\r\nimport AlienButton from '../common/alienButton';\r\n\r\n\r\nconst HomeBody = () => {\r\n    return (\r\n        <div id=\"home-body-container\" className=\"container rounded\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <h3>Hi, I'm Ryan</h3>\r\n                    <p>\r\n                        I love writing code to build cool applications. Click the button to check out my personal favorite!\r\n                    </p>\r\n                    <AlienButton\r\n                        name=\"Typing Speed Test\"\r\n                        sendUserTo=\"/typing-test\"\r\n                        externalLink={false}\r\n                        targetValue=\"_blank\"\r\n                        pageOnWebsite={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeBody;","import React from 'react';\r\nimport Particles from 'react-tsparticles';\r\nimport HomeBody from './homeBody';\r\n\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Particles\r\n                className=\"particles-background-wrapper\"  // Only thing that needs to be changed if wanting different background ... go to css or sass to change this\r\n                id=\"tsparticles\"\r\n                options={{\r\n                    fpsLimit: 60,\r\n                    interactivity: {\r\n                        detectsOn: \"canvas\",\r\n                        events: {\r\n                            onClick: {\r\n                                enable: false,\r\n                                mode: \"bubble\",\r\n                            },\r\n                            onHover: {\r\n                                enable: true,\r\n                                mode: \"bubble\",\r\n                            },\r\n                            resize: true,\r\n                        },\r\n                        modes: {\r\n                            bubble: {\r\n                                distance: 400,\r\n                                duration: 1,\r\n                                opacity: 0.8,\r\n                                size: 10,\r\n                            },\r\n                            push: {\r\n                                quantity: 4,\r\n                            },\r\n                            repulse: {\r\n                                distance: 200,\r\n                                duration: 0.4,\r\n                            },\r\n                        },\r\n                    },\r\n                    particles: {\r\n                        color: {\r\n                            value: \"#ffffff\",\r\n                        },\r\n                        links: {\r\n                            color: \"#ffffff\",\r\n                            distance: 150,\r\n                            enable: false,\r\n                            opacity: 0.5,\r\n                            width: 1,\r\n                        },\r\n                        collisions: {\r\n                            enable: true,\r\n                        },\r\n                        move: {\r\n                            direction: \"none\",\r\n                            enable: true,\r\n                            outMode: \"bounce\",\r\n                            random: false,\r\n                            speed: 1.5,\r\n                            straight: false,\r\n                        },\r\n                        number: {\r\n                            density: {\r\n                                enable: true,\r\n                                value_area: 800,\r\n                            },\r\n                            value: 80,\r\n                        },\r\n                        opacity: {\r\n                            value: 0.5,\r\n                        },\r\n                        shape: {\r\n                            type: \"circle\",\r\n                        },\r\n                        size: {\r\n                            random: true,\r\n                            value: 5,\r\n                        },\r\n                    },\r\n                    detectRetina: true,\r\n                }}\r\n            />\r\n\r\n            <HomeBody />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\n// if more entries for experience ... copy entire col\r\n\r\n\r\nconst ResumeBody = () => {\r\n    return (\r\n        <div id=\"resume-body-container\" className=\"container\" >\r\n            <h1 className=\"resume-title p-5 text-center\">About me</h1>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <p>I am a full stack Web Developer specializing in React.js. I am confident in meeting the needs of a client, and will go the extra mile to ensure this. New frameworks, libraries, programming languages, or anything remotely close, I like learning and getting good with.</p>\r\n                </div>\r\n            </div>\r\n            <h1 className=\"resume-title p-5 text-center\">Experience</h1>\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <h4><span className=\"experience-title\">Web Developer</span></h4>\r\n                    <p className=\"mt-4\">\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> Spoon Rivers Designs and Marketing<br />\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> Remote<br />\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> May 24, 2020 - September 10, 2020<br />\r\n                    </p>\r\n                    <p className=\"mt-3 mb-5\">My main role here was Front-end and Back-end Website Developer roles. I got to develop a website using Worpress for this company. Hosting was on GoDaddy. </p>\r\n                </div>\r\n                {/* <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <h4><span className=\"experience-title\">Web Developer</span></h4>\r\n                    <p className=\"mt-4\">\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> Spoon Rivers Designs and Marketing<br />\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> Remote<br />\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> May 24, 2020 - September 10, 2020<br />\r\n                    </p>\r\n                    <p className=\"mt-3 mb-5\">Text content area</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <h4><span className=\"experience-title\">Web Developer</span></h4>\r\n                    <p className=\"mt-4\">\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> Spoon Rivers Designs and Marketing<br />\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> Remote<br />\r\n                        <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> May 24, 2020 - September 10, 2020<br />\r\n                    </p>\r\n                    <p className=\"mt-3 mb-5\">Text content area</p>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResumeBody;\r\n\r\n","import React from 'react';\r\nimport ResumeBody from './resumeBody'\r\n\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div id=\"content-pages-background\">\r\n            <ResumeBody />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Resume;","import React, { useState } from 'react';\r\n\r\n// prop array is completely automated ... no need to touch anything in this file\r\n// !!! Might need the implementation of <Card /> to run properly\r\n\r\n\r\nconst ReadMore = ({ readMoreID, array }) => {\r\n    const [readMoreLess, setReadMoreLess] = useState(0);\r\n\r\n    const handleState = () => {\r\n        setReadMoreLess(prevState => prevState + 1);\r\n    };\r\n\r\n    const moreOrLess = () => {\r\n        if (readMoreLess % 2 === 0) return \"More\";   // if even\r\n        if (readMoreLess % 2 === 1) return \"Less\";   // if odd\r\n    };\r\n\r\n    const handleReadMore = () => {\r\n        let id = \"readMoreToggle-\" + readMoreID;\r\n        return id;\r\n    };\r\n\r\n    const handleReadMoreHref = () => {\r\n        let href = \"#readMoreToggle-\" + readMoreID;\r\n        return href;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"collapse\" id={handleReadMore()}>{array}</div>   {/* Unfortunately, I cannot change this div tag to a span. Or make it display inline. Otherwise, here would not be that weird spacing you see after clicking the read more button */}\r\n            <a\r\n                className=\"alien-color-link\"\r\n                data-toggle=\"collapse\"\r\n                href={handleReadMoreHref()}   // HAVE to make sure that there is a # in the beginning otherwise this will not work\r\n                role=\"button\"\r\n                aria-expanded=\"false\"\r\n                aria-controls={handleReadMore()}\r\n                onClick={handleState}\r\n            >\r\n                Read {moreOrLess()}\r\n            </a>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReadMore;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport AlienButton from '../common/alienButton';\r\nimport ReadMore from '../common/readMore';\r\n\r\n// parameters are for the title of the card, and text = description\r\n// Auto uses <ReadMore /> ... so if you do not want it, some code needs to be commented out\r\n\r\n// Look at projectsBody.jsx for a sample of how to generate a card\r\n\r\n\r\nconst Card = ({ header, title, text, readMoreID, buttonID, name, sendUserTo, externalLink, targetValue, pageOnWebsite }) => {\r\n    const [wordCounter] = useState(text.split(\" \").length);\r\n\r\n    const handleFirstHalf = text => {\r\n        const finalArray = [];\r\n\r\n        if (text.split(\" \").length >= 20) {   // change all appearances of 20 if you want the text to be shorter or longer before the read more button appears\r\n            const textArray = text.split(\" \", 20);   // no space grabs every letter. A space grabs every word\r\n            for (let i in textArray) {\r\n                finalArray.push(textArray[i] + \" \");\r\n            }\r\n\r\n            const secondHalf = handleSecondHalf(text, wordCounter);\r\n            const returnArray = [finalArray, secondHalf];\r\n            return returnArray;\r\n        }\r\n\r\n        else return text;\r\n    };\r\n\r\n    const handleSecondHalf = (text, wordCounter) => {\r\n        const finalArray = [];\r\n\r\n        const howManyToSplice = wordCounter - 20;   // this value determines how many words to splice\r\n\r\n        const textArray = text.split(\" \", wordCounter);\r\n        const spliceArray = textArray.splice(20, howManyToSplice);   // starting position = 20 ... howManyToSplice = words to splice\r\n\r\n        for (let i in spliceArray) {\r\n            finalArray.push(spliceArray[i] + \" \");\r\n        }\r\n\r\n        return <ReadMore\r\n            key={readMoreID}\r\n            readMoreID={readMoreID}\r\n            array={finalArray}\r\n        />   // readMoreID is a property from projectsBody.jsx that gives the card component a key. But I also want to pass that id value to readMore\r\n    };\r\n\r\n    // HTML return\r\n    return (\r\n        <div className=\"card container\" id=\"projects-card\">\r\n            <div className=\"card-header text-left\" id=\"cardHeader\">{header}</div>\r\n            <div className=\"card-body row\">\r\n                <h5 className=\"card-title col-12\">{title}</h5>\r\n                <div className=\"card-text col-12\">{handleFirstHalf(text)}</div>\r\n                <div className=\"col-12 text-center\">\r\n                    <AlienButton\r\n                        key={buttonID}\r\n                        name={name}\r\n                        sendUserTo={sendUserTo}\r\n                        externalLink={externalLink}\r\n                        targetValue={targetValue}\r\n                        pageOnWebsite={pageOnWebsite}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n\r\n\r\n//{handleSecondHalf(text, wordCounter)}","import React, { useState } from 'react';\r\nimport Card from '../common/card';\r\n\r\n\r\n// !!! IMPORTANT !!! This is where I add cards. They need to be added into the cards state ... follow the example below and then the program will generate a card by itself\r\n    // MUST have unique id for each value ... I just count by 1 each time\r\n\r\n// ONLY use a href if sending user to somewhere else in the website ... So set pageOnWebsite to false\r\n\r\nconst ProjectsBody = () => {\r\n    const [cards] = useState([\r\n        {\r\n            header: \"Featured\",\r\n            title: \"Typing Speed Test\",\r\n            text: \"My favorite program. See how fast you can type Bible verses in the King James Version!\",\r\n            cardID: 1,\r\n            readMoreID: 2,\r\n            // If you want a button\r\n            buttonID: 3,   // This value should be used for the key\r\n            name: \"Typing Speed Test\",\r\n            sendUserTo: \"/typing-test\",\r\n            externalLink: true,\r\n            targetValue: \"_blank\",\r\n            pageOnWebsite: false\r\n        },\r\n        {\r\n            header: \"Featured\",\r\n            title: \"Class Project\",\r\n            text: \"Built using DreamWeaver. Website was created for a class project.\",\r\n            cardID: 4,\r\n            readMoreID: 5,\r\n            // If you want a button\r\n            buttonID: 6,   // This value should be used for the key\r\n            name: \"Class Project\",\r\n            sendUserTo: \"https://ryanhutson5518.github.io/class-project/\",\r\n            externalLink: true,\r\n            targetValue: \"_blank\",\r\n            pageOnWebsite: true\r\n        },\r\n        {\r\n            header: \"Java\",\r\n            title: \"Update Companies\",\r\n            text: \"This program randomly displays 2 companies. Output first displays the original companies and prices of their stock. Then displays the updated stock price on the same run\",\r\n            cardID: 7,\r\n            readMoreID: 8,\r\n            // If you want a button\r\n            buttonID: 9,   // This value should be used for the key\r\n            name: \"Update Companies\",\r\n            sendUserTo: \"https://onlinegdb.com/B1cgzxl3v\",\r\n            externalLink: true,\r\n            targetValue: \"_blank\",\r\n            pageOnWebsite: false\r\n        },\r\n        {\r\n            header: \"Java\",\r\n            title: \"Rock, Paper, Scissors\",\r\n            text: \"Play against the computer. The computer's move is generated at random. So you have a fair chance of winning.\",\r\n            cardID: 10,\r\n            readMoreID: 11,\r\n            // If you want a button\r\n            buttonID: 12,   // This value should be used for the key\r\n            name: \"Rock, Paper, Scissors\",\r\n            sendUserTo: \"https://onlinegdb.com/AsJ4vHL68\",\r\n            externalLink: true,\r\n            targetValue: \"_blank\",\r\n            pageOnWebsite: false\r\n        }\r\n    ]);\r\n\r\n    return (\r\n        <div id=\"projects-body-container\" className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-center\">\r\n                        {cards.map(card => {\r\n                            return (\r\n                                <div key={card.cardID} className=\"col-12 col-md-6 col-lg-4\">   {/* key has to be on the main parent element in this scenario */}\r\n                                    <Card\r\n                                        readMoreID={card.readMoreID}\r\n                                        header={card.header}\r\n                                        title={card.title}\r\n                                        text={card.text}\r\n                                        // For button\r\n                                        buttonID={card.buttonID}\r\n                                        name={card.name}\r\n                                        sendUserTo={card.sendUserTo}\r\n                                        externalLink={card.externalLink}\r\n                                        targetValue={card.targetValue}\r\n                                        pageOnWebsite={card.pageOnWebsite}\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectsBody;\r\n\r\n","import React from 'react';\r\nimport ProjectsBody from './projectsBody';\r\n\r\n\r\nconst Projects = () => {\r\n    return (\r\n            <div id=\"content-pages-background\">\r\n                <ProjectsBody />\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\n\r\nconst ContactBody = () => {\r\n    return (\r\n        <div id=\"contact-body-container\" className=\"container\" >\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-home\"></i><p className=\"d-inline\"> Plainfield, IL 60585</p></h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-mobile-phone\"></i><a className=\"d-inline alien-color-link\" href=\"tel:18155570075\"> 815-557-0075</a></h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-envelope\"></i><p className=\"d-inline\"> ryanhutson5518@gmail.com</p></h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-linkedin-square\"></i><a className=\"d-inline alien-color-link\" href=\"https://www.linkedin.com/in/ryanhutson5518/\" target=\"_blank\" rel=\"noreferrer\"> linkedin.com/in/ryanhutson5518</a></h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactBody;\r\n","import React from 'react';\r\nimport ContactBody from './contactBody'\r\n\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div id=\"content-pages-background\">\r\n            <ContactBody />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className=\"container\" id=\"nav-container\">\r\n            <ul className=\"row justify-content-around text-center\" id=\"nav-row\">\r\n                <li className=\"col-12 col-lg-3\">\r\n                    <NavLink to=\"/portfolio-website\" className=\"nav-link\">\r\n                        <h1>Ryan</h1>\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"col-3\">\r\n                    <Link to=\"/resume\" className=\"nav-link\">\r\n                        Resume\r\n                    </Link>\r\n                </li>\r\n                <li className=\"col-3\">\r\n                    <Link to=\"/projects\" className=\"nav-link\">\r\n                        Projects\r\n                    </Link>\r\n                </li>\r\n                <li className=\"col-3\">\r\n                    <Link to=\"/contact\" className=\"nav-link\">\r\n                        Contact\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nconst Game = ({ content, handleInput, input }) => {\r\n    const [timer, setTimer] = useState(0);\r\n    let minutes = timer / 60;\r\n    let correctCharacters = 0;\r\n    const [WPM, setWPM] = useState(0);\r\n\r\n    const text = content.split(\"\");\r\n    const userInput = input;\r\n    \r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setTimer(timer + 1);\r\n            if (correctCharacters !== 0) {\r\n                setWPM(Math.round((correctCharacters / 5) / minutes));\r\n            }\r\n        }, 1000);\r\n    }, [timer]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"game-container row justify-content-center\">\r\n                <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n                    {\r\n                        text.map((character, index) => {\r\n                            let color;\r\n                            if (index < userInput.length) {\r\n                                color = character === userInput[index] ? \"correct\" : \"incorrect\";\r\n                            }\r\n                            if (character === userInput[index]) correctCharacters++;\r\n\r\n                            return <span key={index} className={color}>{character}</span>\r\n                        })\r\n                    }\r\n                </div>\r\n                <textarea\r\n                    value={input}\r\n                    onInput={event => handleInput(event.target.value)}\r\n                    autoFocus spellCheck=\"false\"\r\n                    autoCapitalize=\"false\"\r\n                    autoCorrect=\"false\"\r\n                    autoComplete=\"false\"\r\n                    className=\"quote-input col-12 rounded\"\r\n                    id=\"quoteInput\"\r\n                >\r\n                </textarea>\r\n                <h1 className=\"col-12\">WPM: {WPM}</h1>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n\r\n// const Game = ({ content, handleInput, input }) => {\r\n//     const text = content.split(\"\");\r\n//     const userInput = input;\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div className=\"game-container row justify-content-center\">\r\n//                 <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n//                     {\r\n//                         text.map((character, index) => {\r\n//                             let color;\r\n//                             if (index < userInput.length) {\r\n//                                 color = character === userInput[index] ? \"correct\" : \"incorrect\";\r\n//                             }\r\n//                             return <span key={index} className={color}>{character}</span>\r\n//                         })\r\n//                     }\r\n//                 </div>\r\n//                 <textarea\r\n//                     value={input}\r\n//                     onInput={event => handleInput(event.target.value)}\r\n//                     autoFocus spellCheck=\"false\"\r\n//                     autoCapitalize=\"false\"\r\n//                     autoCorrect=\"false\"\r\n//                     autoComplete=\"false\"\r\n//                     className=\"quote-input col-12 rounded\"\r\n//                     id=\"quoteInput\"\r\n//                 >\r\n//                 </textarea>\r\n//                 <div className=\"timer col-12\" id=\"timer\">wpm: </div>\r\n//             </div>\r\n//         </React.Fragment>\r\n//     );\r\n// };\r\n\r\n// export default Game;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n\r\n// const Game = ({ content, handleInput, input }) => {\r\n//     const text = content.split(\"\");   // this is an array of every character\r\n//     const words = content.split(\" \");   // every word of content ... in an array\r\n//     const userInput = input;   // full text of user input\r\n//     const inputWords = userInput.split(\" \");   // every word the user types in. This is to compare the value with \"words\" so that if they are the same, I can add 1 to \"correctWordsCounter\"\r\n//     let correctWordsCounter = 0;\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div className=\"game-container row justify-content-center\">\r\n//                 <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n//                     {\r\n//                         text.map((character, index) => {\r\n//                             let color;\r\n//                             if (index < userInput.length) {\r\n//                                 color = character === userInput[index] ? \"correct\" : \"incorrect\";\r\n//                             }\r\n//                             if (color === \"correct\" && words[index] === inputWords[index]) {   // this is a check to see if the word is correct and both user input and content word is the same\r\n//                                 correctWordsCounter++;\r\n//                             }\r\n//                             return <span key={index} className={color}>{character}</span>\r\n//                         })\r\n//                     }\r\n//                 </div>\r\n//                 <textarea\r\n//                     value={input}\r\n//                     onInput={event => handleInput(event.target.value)}\r\n//                     autoFocus spellCheck=\"false\"\r\n//                     autoCapitalize=\"false\"\r\n//                     autoCorrect=\"false\"\r\n//                     autoComplete=\"false\"\r\n//                     className=\"quote-input col-12 rounded\"\r\n//                     id=\"quoteInput\"\r\n//                 >\r\n//                 </textarea>\r\n//                 <div className=\"timer col-12\" id=\"timer\">wpm: {correctWordsCounter}</div>\r\n//             </div>\r\n//         </React.Fragment>\r\n//     );\r\n// };\r\n\r\n// export default Game;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n\r\n// const Game = ({ content, handleInput, input }) => {\r\n//     const text = content.split(\"\");   // this is an array of every character\r\n//     const words = content.split(\" \");   // every word of content ... in an array\r\n//     const userInput = input;   // full text of user input\r\n//     const inputWords = userInput.split(\" \");   // every word the user types in. This is to compare the value with \"words\" so that if they are the same, I can add 1 to \"correctWordsCounter\"\r\n//     let correctWordsCounter = 0;\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div className=\"game-container row justify-content-center\">\r\n//                 <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n//                     {\r\n//                         text.map((character, index) => {\r\n//                             let color;\r\n//                             if (index < userInput.length) {\r\n//                                 color = character === userInput[index] ? \"correct\" : \"incorrect\";\r\n//                                 console.log(words[index])\r\n//                                 console.log(inputWords[index])\r\n//                             }\r\n//                             if (color === \"correct\" && words[index] === inputWords[index]) {   // this is a check to see if the word is correct and both user input and content word is the same\r\n//                                 correctWordsCounter++;\r\n//                             }\r\n//                             return <span key={index} className={color}>{character}</span>\r\n//                         })\r\n//                     }\r\n//                 </div>\r\n//                 <textarea\r\n//                     value={input}\r\n//                     onInput={event => handleInput(event.target.value)}\r\n//                     autoFocus spellCheck=\"false\"\r\n//                     autoCapitalize=\"false\"\r\n//                     autoCorrect=\"false\"\r\n//                     autoComplete=\"false\"\r\n//                     className=\"quote-input col-12 rounded\"\r\n//                     id=\"quoteInput\"\r\n//                 >\r\n//                 </textarea>\r\n//                 <div className=\"timer col-12\" id=\"timer\">wpm: {correctWordsCounter}</div>\r\n//             </div>\r\n//         </React.Fragment>\r\n//     );\r\n// };\r\n\r\n// export default Game;\r\n","import React from 'react';\r\n\r\n\r\nconst Finished = () => {\r\n    return (\r\n        <h1>You have completed the test! Restart the browser to start again.</h1>\r\n    );\r\n};\r\n\r\nexport default Finished;","import React, { useState, useEffect } from 'react';\r\nimport bibleVerses from '../../services/bibleVerses.json';   // bibleVerses is the name of the array that I can use in my code\r\nimport Game from './game';\r\nimport Finished from './finished';\r\n\r\n\r\nconst TypingTest = () => {\r\n    const [state, setState] = useState(bibleVerses);\r\n    const [content, setContent] = useState(\"\");   // might have to add this back in ... the setContent\r\n    const [input, setInput] = useState(\"\");  // bind this to person typing\r\n\r\n\r\n    const handleInput = text => {   // This function starts all the other functions ... every time I input a character, this function runs ... so its a good spot to dynamically change the classes\r\n        setInput(text);\r\n        if (text === content) {\r\n            const newState = state.filter(index => index.content !== content);   // string is used here because I need the string value of content\r\n            setState(newState);\r\n            setInput(\"\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setContent(state[Math.floor(Math.random() * state.length)].content);   // This is the updated state\r\n    }, [state]);\r\n\r\n    return (\r\n        <div id=\"content-pages-background\">\r\n            <div id=\"typingTestBody\" className=\"container\">\r\n\r\n                {\r\n                    state.length === 1 && input.length === content.length - 1 ?\r\n                        <Finished />\r\n                        : <Game\r\n                            content={content}\r\n                            handleInput={handleInput}\r\n                            input={input}\r\n                        />\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypingTest;\r\n\r\n\r\n// const [state, setState] = useState(bibleVerses);\r\n// const [content, setContent] = useState(\"\");   // might have to add this back in ... the setContent\r\n// const [input, setInput] = useState(\"\");  // bind this to person typing\r\n\r\n\r\n// const deleteContent = () => {\r\n//     let arrayToString = content;\r\n//     let string = \"\";\r\n//     for (let i in arrayToString) {\r\n//         string = string + arrayToString[i].props.children;\r\n//     }\r\n//     const newState = state.filter(index => index.content !== string);   // string is used here because I need the string value of content\r\n//     setState(newState);\r\n// };\r\n\r\n// const handleInput = text => {   // This function starts all the other functions ... every time I input a character, this function runs ... so its a good spot to dynamically change the classes\r\n//     setInput(text)\r\n//     inputCharacter = text;\r\n//     console.log(content[0].props.children)\r\n//     console.log(inputCharacter)\r\n// };\r\n\r\n// const getClass = character => {\r\n\r\n// };\r\n\r\n// useEffect(() => {\r\n//     if (content.length === input.length) {\r\n//         deleteContent();\r\n//     }\r\n// }, [input]);\r\n\r\n// useEffect(() => {\r\n//     setInput(\"\");\r\n// }, [content]);\r\n\r\n// useEffect(() => {\r\n//     setContent(state[Math.floor(Math.random() * state.length)].content.split(\"\").map((character, index) => <span key={index} className={getClass()}>{character}</span>));   // This is the updated state\r\n// }, [state]);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport NotFound from './components/notFound';\nimport Home from './components/home/home';\nimport Resume from './components/resume/resume';\nimport Projects from './components/projects/projects';\nimport Contact from './components/contact/contact';\nimport NavBar from './components/common/navBar';\nimport TypingTest from './components/typingTest/typingTest';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/js/dist/collapse';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport './App.css';\nimport '../src/css/styles.min.css';\nimport '../src/css/alienButton.min.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <Switch>\n          <Route path=\"/portfolio-website\" component={Home} />\n          <Route path=\"/resume\" component={Resume} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/typing-test\" component={TypingTest} />\n          <Redirect exact from=\"/\" to=\"/portfolio-website\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}