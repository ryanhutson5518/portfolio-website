{"version":3,"sources":["reportWebVitals.js","components/notFound.jsx","components/common/alienButton.jsx","components/home/homeBody.jsx","components/home/home.jsx","img/plainfield_north_highschool.jpg","img/JJC.jpg","img/certificate-of-completion-for-javascript-basics.pdf","img/certificate-of-completion-for-object-oriented-programming-in-javascript.pdf","img/certificate-of-completion-for-mastering-react.pdf","components/resume/resumeBody.jsx","components/resume/resume.jsx","components/common/readMore.jsx","components/common/card.jsx","components/projects/projectsBody.jsx","components/projects/projects.jsx","components/contact/contactBody.jsx","components/contact/contact.jsx","components/common/navBar.jsx","components/typingTest/game.jsx","components/typingTest/finished.jsx","components/typingTest/typingTest.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NotFound","id","className","handleLink","externalLink","sendUserTo","pathname","AlienButton","name","targetValue","pageOnWebsite","Fragment","to","target","rel","href","HomeBody","Home","options","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","ResumeBody","src","Highschool","alt","College","js1","jsOOP","ReactMastery","Resume","ReadMore","readMoreID","array","useState","readMoreLess","setReadMoreLess","handleReadMore","data-toggle","role","aria-expanded","aria-controls","prevState","Card","header","title","text","buttonID","split","length","wordCounter","handleSecondHalf","finalArray","howManyToSplice","spliceArray","splice","i","textArray","handleFirstHalf","ProjectsBody","cardID","cards","map","card","Projects","ContactBody","Contact","NavBar","Game","content","handleInput","input","timer","setTimer","minutes","correctCharacters","WPM","setWPM","userInput","useEffect","setTimeout","Math","round","character","index","onInput","event","autoFocus","spellCheck","autoCapitalize","autoCorrect","autoComplete","Finished","TypingTest","bibleVerses","state","setState","setContent","setInput","floor","newState","filter","App","path","component","exact","from","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ba77100.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div id=\"content-pages-background\">\r\n            <div id=\"not-found\" className=\"container text-center\" >\r\n                <h1>Not Found</h1>\r\n                <p>You have entered in an invalid URL</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// *** MUST have the alien-button styles for this to work\r\n// Look at parameters to see what will be included\r\n/* Example = 4 props total ... 1 has a default value\r\n        <AlienButton \r\n            name=\"Typing Speed Test\"   // Text on the button\r\n            sendUserTo=\"https://onlinegdb.com/r1BexqSov\" // IMPORTANT ... sending to external link, you cannot have / in the beginning ... sending to a path on the site, make sure to have / in the beginning\r\n            externalLink=\"true\"   // true or false if it is an external link or not\r\n            targetValue=\"_blank\"   // IMPORTANT ... external links MUST have _blank in order to work ... Cut out this code if you want user to stay on the page and not open in a new tab or window\r\n        />\r\n*/\r\n\r\n\r\nconst AlienButton = ({ name, sendUserTo, externalLink, targetValue = \"_self\", pageOnWebsite }) => {   // targetValue will default to not open the link in another tab or window\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                pageOnWebsite === true ?\r\n                    <Link to={handleLink(externalLink, sendUserTo)} target={targetValue} rel=\"noreferrer\">\r\n                        <button id=\"alien-button\">\r\n                            {name}\r\n                        </button>\r\n                    </Link>\r\n\r\n                    : <a href={sendUserTo} target={targetValue} rel=\"noreferrer\">\r\n                        <button id=\"alien-button\">\r\n                            {name}\r\n                        </button>\r\n                    </a>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst handleLink = (externalLink, sendUserTo) => {\r\n    if (externalLink) return { pathname: sendUserTo };\r\n    if (!externalLink) return sendUserTo;\r\n};\r\n\r\nexport default AlienButton;\r\n\r\n","import React from 'react';\r\nimport AlienButton from '../common/alienButton';\r\n\r\n\r\nconst HomeBody = () => {\r\n    return (\r\n        <div id=\"home-body-container\" className=\"container rounded\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col text-center\">\r\n                    <h3>Hi, I'm Ryan</h3>\r\n                    <p>\r\n                        I love writing code to build cool applications. Click the button to check out my personal favorite!\r\n                    </p>\r\n                    <AlienButton\r\n                        name=\"Typing Speed Test\"\r\n                        sendUserTo=\"/typing-test\"\r\n                        externalLink={false}\r\n                        targetValue=\"_blank\"\r\n                        pageOnWebsite={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeBody;","import React from 'react';\r\nimport Particles from 'react-tsparticles';\r\nimport HomeBody from './homeBody';\r\n\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Particles\r\n                className=\"particles-background-wrapper\"  // Only thing that needs to be changed if wanting different background ... go to css or sass to change this\r\n                id=\"tsparticles\"\r\n                options={{\r\n                    fpsLimit: 60,\r\n                    interactivity: {\r\n                        detectsOn: \"canvas\",\r\n                        events: {\r\n                            onClick: {\r\n                                enable: false,\r\n                                mode: \"bubble\",\r\n                            },\r\n                            onHover: {\r\n                                enable: true,\r\n                                mode: \"bubble\",\r\n                            },\r\n                            resize: true,\r\n                        },\r\n                        modes: {\r\n                            bubble: {\r\n                                distance: 400,\r\n                                duration: 1,\r\n                                opacity: 0.8,\r\n                                size: 10,\r\n                            },\r\n                            push: {\r\n                                quantity: 4,\r\n                            },\r\n                            repulse: {\r\n                                distance: 200,\r\n                                duration: 0.4,\r\n                            },\r\n                        },\r\n                    },\r\n                    particles: {\r\n                        color: {\r\n                            value: \"#ffffff\",\r\n                        },\r\n                        links: {\r\n                            color: \"#ffffff\",\r\n                            distance: 150,\r\n                            enable: false,\r\n                            opacity: 0.5,\r\n                            width: 1,\r\n                        },\r\n                        collisions: {\r\n                            enable: true,\r\n                        },\r\n                        move: {\r\n                            direction: \"none\",\r\n                            enable: true,\r\n                            outMode: \"bounce\",\r\n                            random: false,\r\n                            speed: 1.5,\r\n                            straight: false,\r\n                        },\r\n                        number: {\r\n                            density: {\r\n                                enable: true,\r\n                                value_area: 800,\r\n                            },\r\n                            value: 80,\r\n                        },\r\n                        opacity: {\r\n                            value: 0.5,\r\n                        },\r\n                        shape: {\r\n                            type: \"circle\",\r\n                        },\r\n                        size: {\r\n                            random: true,\r\n                            value: 5,\r\n                        },\r\n                    },\r\n                    detectRetina: true,\r\n                }}\r\n            />\r\n\r\n            <HomeBody />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/plainfield_north_highschool.2bf6c001.jpg\";","export default __webpack_public_path__ + \"static/media/JJC.764a2871.jpg\";","export default __webpack_public_path__ + \"static/media/certificate-of-completion-for-javascript-basics.44cb71e7.pdf\";","export default __webpack_public_path__ + \"static/media/certificate-of-completion-for-object-oriented-programming-in-javascript.040f0fcf.pdf\";","export default __webpack_public_path__ + \"static/media/certificate-of-completion-for-mastering-react.f05ee4b1.pdf\";","import React from \"react\";\r\nimport Highschool from \"../../img/plainfield_north_highschool.jpg\";\r\nimport College from \"../../img/JJC.jpg\";\r\nimport js1 from \"../../img/certificate-of-completion-for-javascript-basics.pdf\";\r\nimport jsOOP from \"../../img/certificate-of-completion-for-object-oriented-programming-in-javascript.pdf\";\r\nimport ReactMastery from \"../../img/certificate-of-completion-for-mastering-react.pdf\";\r\n\r\n// if more entries for experience ... copy entire col\r\n\r\nconst ResumeBody = () => {\r\n  return (\r\n    <div id=\"resume-body-container\" className=\"container\">\r\n      <div className=\"row text-center resume-row-border\">\r\n        <div className=\"col-12 col-md-4 mb-5\" id=\"resumeAboutMe\">\r\n          <h1 className=\"\">About me</h1>\r\n          <p>\r\n            Hardworking and passionate Software Developer. Recent graduate from\r\n            Joliet Junior College with an Associate of Applied Science degree in\r\n            Computer Programming\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-8\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <h1 className=\"text-center\">Education</h1>\r\n              </div>\r\n              <div className=\"col\">\r\n                <img src={Highschool} alt=\"\" className=\"education-images\" />{\" \"}\r\n                <br />\r\n                <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n                Plainfield North Highschool <br />\r\n                <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n                Graduation Year: 2017 <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n              <div className=\"col\">\r\n                <img src={College} alt=\"\" className=\"education-images\" /> <br />\r\n                <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n                Joliet Junior College <br />\r\n                <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n                Computer Programming A.A.S <br />\r\n                <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n                Graduation Year: 2020 <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row text-center mb-5 mt-5\">\r\n        <div className=\"col-12\">\r\n          <h1>Certifications</h1>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>\r\n          <a\r\n            href={js1}\r\n            target=\"_blank\"\r\n            rel=\"noreferer\"\r\n            className=\"alien-color-link\"\r\n          >\r\n            {\" \"}\r\n            JavaScript Mastery Series part 1: Basics\r\n          </a>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>\r\n          <a\r\n            href={jsOOP}\r\n            target=\"_blank\"\r\n            rel=\"noreferer\"\r\n            className=\"alien-color-link\"\r\n          >\r\n            {\" \"}\r\n            JavaScript Mastery Series part 2: Object Oriented Programming\r\n          </a>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>\r\n          <a\r\n            href={ReactMastery}\r\n            target=\"_blank\"\r\n            rel=\"noreferer\"\r\n            className=\"alien-color-link\"\r\n          >\r\n            {\" \"}\r\n            Mastering React\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"row text-center resume-row-border\">\r\n        <div className=\"col-12\">\r\n          <h1 className=\"text-center\">Experience</h1>\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <h4>\r\n            <span className=\"experience-title\">Web Developer</span>\r\n          </h4>\r\n          <p className=\"mt-4\">\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> Spoon\r\n            Rivers Designs and Marketing\r\n            <br />\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> Remote\r\n            <br />\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> May 24,\r\n            2020 - September 10, 2020\r\n            <br />\r\n          </p>\r\n          <p className=\"mt-3 mb-5\">\r\n            Created a WordPress website utilizing Elementor page builder and\r\n            proprietary code that allowed clients to better sell their services\r\n            to non-profits.\r\n            <br />\r\n            <br />\r\n            Continuing communication with client to determine any edits,\r\n            updates, or additional code. &nbsp;\r\n            <a\r\n              href=\"https://www.spoonriverdesigns.com/\"\r\n              className=\"alien-color-link\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Spoon Rivers Designs and Marketing inc.\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <h4>\r\n            <span className=\"experience-title\">Volunteer IT</span>\r\n          </h4>\r\n          <p className=\"mt-4\">\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n            Shorewood Baptist Church\r\n            <br />\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> @ the\r\n            church\r\n            <br />\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n            December 1, 2019 - Present\r\n            <br />\r\n          </p>\r\n          <p className=\"mt-3 mb-5\">\r\n            Function as a website specialist to enhance, manage, update, and\r\n            edit utilizing WordPress and proprietary JavaScript code.\r\n            <br />\r\n            <br />\r\n            Managed and produced sermons utilizing church’s equipment and\r\n            personal laptop to live stream and post on YouTube.\r\n            <br />\r\n            <br />\r\n            Served as an IT specialist for any technical problems or issues.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <h4>\r\n            <span className=\"experience-title\">Cart Attendant</span>\r\n          </h4>\r\n          <p className=\"mt-4\">\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n            Bolingbrook Golf Club - Seasonal\r\n            <br />\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i>{\" \"}\r\n            Bolingbrook Golf Club\r\n            <br />\r\n            <i className=\"fa fa-asterisk alien-color-link d-inline\"></i> August\r\n            2018 - November 2019\r\n            <br />\r\n          </p>\r\n          <p className=\"mt-3 mb-5\">\r\n            Brought out clean, fully charged, fully stocked golf carts. (Carts\r\n            had to be stocked with a pencil, 2 water bottles with ice, score\r\n            card, full sand bottles, water in the golf cleaner, and warm towels)\r\n            <br />\r\n            <br />\r\n            Carrying guests and members equipment such as golf clubs and other\r\n            items to the golf cart\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeBody;\r\n","import React from 'react';\r\nimport ResumeBody from './resumeBody'\r\n\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div id=\"content-pages-background\">\r\n            <ResumeBody />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Resume;","import React, { useState } from 'react';\r\n\r\n// prop array is completely automated ... no need to touch anything in this file\r\n// !!! Might need the implementation of <Card /> to run properly\r\n\r\n\r\nconst ReadMore = ({ readMoreID, array }) => {\r\n    const [readMoreLess, setReadMoreLess] = useState(0);\r\n\r\n    const handleState = () => {\r\n        setReadMoreLess(prevState => prevState + 1);\r\n    };\r\n\r\n    const moreOrLess = () => {\r\n        if (readMoreLess % 2 === 0) return \"More\";   // if even\r\n        if (readMoreLess % 2 === 1) return \"Less\";   // if odd\r\n    };\r\n\r\n    const handleReadMore = () => {\r\n        let id = \"readMoreToggle-\" + readMoreID;\r\n        return id;\r\n    };\r\n\r\n    const handleReadMoreHref = () => {\r\n        let href = \"#readMoreToggle-\" + readMoreID;\r\n        return href;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"collapse\" id={handleReadMore()}>{array}</div>   {/* Unfortunately, I cannot change this div tag to a span. Or make it display inline. Otherwise, here would not be that weird spacing you see after clicking the read more button */}\r\n            <a\r\n                className=\"alien-color-link\"\r\n                data-toggle=\"collapse\"\r\n                href={handleReadMoreHref()}   // HAVE to make sure that there is a # in the beginning otherwise this will not work\r\n                role=\"button\"\r\n                aria-expanded=\"false\"\r\n                aria-controls={handleReadMore()}\r\n                onClick={handleState}\r\n            >\r\n                Read {moreOrLess()}\r\n            </a>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReadMore;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport AlienButton from '../common/alienButton';\r\nimport ReadMore from '../common/readMore';\r\n\r\n// parameters are for the title of the card, and text = description\r\n// Auto uses <ReadMore /> ... so if you do not want it, some code needs to be commented out\r\n\r\n// Look at projectsBody.jsx for a sample of how to generate a card\r\n\r\n\r\nconst Card = ({ header, title, text, readMoreID, buttonID, name, sendUserTo, externalLink, targetValue, pageOnWebsite }) => {\r\n    const [wordCounter] = useState(text.split(\" \").length);\r\n\r\n    const handleFirstHalf = text => {\r\n        const finalArray = [];\r\n\r\n        if (text.split(\" \").length >= 20) {   // change all appearances of 20 if you want the text to be shorter or longer before the read more button appears\r\n            const textArray = text.split(\" \", 20);   // no space grabs every letter. A space grabs every word\r\n            for (let i in textArray) {\r\n                finalArray.push(textArray[i] + \" \");\r\n            }\r\n\r\n            const secondHalf = handleSecondHalf(text, wordCounter);\r\n            const returnArray = [finalArray, secondHalf];\r\n            return returnArray;\r\n        }\r\n\r\n        else return text;\r\n    };\r\n\r\n    const handleSecondHalf = (text, wordCounter) => {\r\n        const finalArray = [];\r\n\r\n        const howManyToSplice = wordCounter - 20;   // this value determines how many words to splice\r\n\r\n        const textArray = text.split(\" \", wordCounter);\r\n        const spliceArray = textArray.splice(20, howManyToSplice);   // starting position = 20 ... howManyToSplice = words to splice\r\n\r\n        for (let i in spliceArray) {\r\n            finalArray.push(spliceArray[i] + \" \");\r\n        }\r\n\r\n        return <ReadMore\r\n            key={readMoreID}\r\n            readMoreID={readMoreID}\r\n            array={finalArray}\r\n        />   // readMoreID is a property from projectsBody.jsx that gives the card component a key. But I also want to pass that id value to readMore\r\n    };\r\n\r\n    // HTML return\r\n    return (\r\n        <div className=\"card container\" id=\"projects-card\">\r\n            <div className=\"card-header text-left\" id=\"cardHeader\">{header}</div>\r\n            <div className=\"card-body row\">\r\n                <h5 className=\"card-title col-12\">{title}</h5>\r\n                <div className=\"card-text col-12\">{handleFirstHalf(text)}</div>\r\n                <div className=\"col-12 text-center\">\r\n                    <AlienButton\r\n                        key={buttonID}\r\n                        name={name}\r\n                        sendUserTo={sendUserTo}\r\n                        externalLink={externalLink}\r\n                        targetValue={targetValue}\r\n                        pageOnWebsite={pageOnWebsite}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n\r\n\r\n//{handleSecondHalf(text, wordCounter)}","import React, { useState } from \"react\";\r\nimport Card from \"../common/card\";\r\n\r\n// !!! IMPORTANT !!! This is where I add cards. They need to be added into the cards state ... follow the example below and then the program will generate a card by itself\r\n// MUST have unique id for each value ... I just count by 1 each time\r\n\r\n// ONLY use a href if sending user to somewhere else in the website ... So set pageOnWebsite to false\r\n\r\n// This state data passes it's data to Card, then passes it AlienButton components\r\n\r\nconst ProjectsBody = () => {\r\n  const [cards] = useState([\r\n    {\r\n      header: \"React / JavaScript\",\r\n      title: \"Typing Speed Test\",\r\n      text: \"My favorite program. See how fast you can type famous quotes!\",\r\n      cardID: 1,\r\n      readMoreID: 2,\r\n      // If you want a button\r\n      buttonID: 3, // This value should be used for the key\r\n      name: \"Typing Speed Test\",\r\n      sendUserTo: \"/typing-test\",\r\n      externalLink: false,\r\n      targetValue: \"_blank\",\r\n      pageOnWebsite: true,\r\n    },\r\n    {\r\n      header: \"ASP.NET Core\",\r\n      title: \"MVC, Ecommerce, Shopping Cart\",\r\n      text:\r\n        \"Ecommerce website that sells computers. You can add products to the cart, delete them from the cart, view products with their details, filter products, and more! Application is hosted on Azure. I got the email to send correctly in developement mode using an SMTP library. Unfortunately, Azure does not allow me to send emails unless I pay a hefty subscription fee.\",\r\n      cardID: 23,\r\n      readMoreID: 24,\r\n      buttonID: 25,\r\n      name: \".Net MVC Ecommerce\",\r\n      sendUserTo: \"https://shoppingcartmvc.azurewebsites.net/\",\r\n      externalLink: true,\r\n      targetValue: \"_blank\",\r\n      pageOnWebsite: false,\r\n    },\r\n    {\r\n      header: \"ASP.NET Core\",\r\n      title: \"MVC, SQL Server, Azure\",\r\n      text:\r\n        \"Application created using MVC architecture in Visual Studio 2019. Latest .NET 5 Core used. Up and running SQL Server Database. This application is also hosted on Microsoft Azure. Implementation of CRUD operations. (Create, Read, Update, Delete).\",\r\n      cardID: 20,\r\n      readMoreID: 21,\r\n      // If you want a button\r\n      buttonID: 22, // This value should be used for the key\r\n      name: \".NET 5 MVC Core\",\r\n      sendUserTo: \"https://mvcproject.azurewebsites.net/\",\r\n      externalLink: true,\r\n      targetValue: \"_blank\",\r\n      pageOnWebsite: false,\r\n    },\r\n    {\r\n      header: \"WordPress, JavaScript\",\r\n      title: \"Internship\",\r\n      text:\r\n        \"Built using WordPress CMS, Elementor page builder, and proprietary JavaScript code. Hosted on GoDaddy. This website was created to help Spoon River Designs and Marketing Inc. better sell their services to non-profits\",\r\n      cardID: 34,\r\n      readMoreID: 35,\r\n      // If you want a button\r\n      buttonID: 36,\r\n      name: \"Internship\",\r\n      sendUserTo: \"https://www.spoonriverdesigns.com/\",\r\n      externalLink: true,\r\n      targetValue: \"_blank\",\r\n      pageOnWebsite: false,\r\n    },\r\n    {\r\n      header: \"HTML, CSS, JavaScript\",\r\n      title: \"Class Project\",\r\n      text: \"Built using DreamWeaver. Website was created for a class project.\",\r\n      cardID: 4,\r\n      readMoreID: 5,\r\n      // If you want a button\r\n      buttonID: 6, // This value should be used for the key\r\n      name: \"Class Project\",\r\n      sendUserTo: \"https://ryanhutson5518.github.io/class-project/\",\r\n      externalLink: true,\r\n      targetValue: \"_blank\",\r\n      pageOnWebsite: false,\r\n    },\r\n    {\r\n      header: \"Java\",\r\n      title: \"Update Companies\",\r\n      text:\r\n        \"This program randomly displays 2 companies. Output first displays the original companies and prices of their stock. Then displays the updated stock price on the same run\",\r\n      cardID: 7,\r\n      readMoreID: 8,\r\n      // If you want a button\r\n      buttonID: 9, // This value should be used for the key\r\n      name: \"Update Companies\",\r\n      sendUserTo: \"https://onlinegdb.com/B1cgzxl3v\",\r\n      externalLink: true,\r\n      targetValue: \"_blank\",\r\n      pageOnWebsite: false,\r\n    },\r\n    {\r\n      header: \"Java\",\r\n      title: \"Rock, Paper, Scissors\",\r\n      text:\r\n        \"Play against the computer. The computer's move is generated at random. So you have a fair chance of winning.\",\r\n      cardID: 10,\r\n      readMoreID: 11,\r\n      // If you want a button\r\n      buttonID: 12, // This value should be used for the key\r\n      name: \"Rock, Paper, Scissors\",\r\n      sendUserTo: \"https://onlinegdb.com/AsJ4vHL68\",\r\n      externalLink: true,\r\n      targetValue: \"_blank\",\r\n      pageOnWebsite: false,\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <div id=\"projects-body-container\" className=\"container mb-5 pb-5\">\r\n      <div className=\"row\">\r\n        <div className=\"container\">\r\n          <div className=\"row text-center\">\r\n            {cards.map((card) => {\r\n              return (\r\n                <div key={card.cardID} className=\"col-12 col-md-6 col-lg-4\">\r\n                  {\" \"}\r\n                  {/* key has to be on the main parent element in this scenario */}\r\n                  <Card\r\n                    readMoreID={card.readMoreID}\r\n                    header={card.header}\r\n                    title={card.title}\r\n                    text={card.text}\r\n                    // For button\r\n                    buttonID={card.buttonID}\r\n                    name={card.name}\r\n                    sendUserTo={card.sendUserTo}\r\n                    externalLink={card.externalLink}\r\n                    targetValue={card.targetValue}\r\n                    pageOnWebsite={card.pageOnWebsite}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsBody;\r\n","import React from 'react';\r\nimport ProjectsBody from './projectsBody';\r\n\r\n\r\nconst Projects = () => {\r\n    return (\r\n            <div id=\"content-pages-background\">\r\n                <ProjectsBody />\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\n\r\nconst ContactBody = () => {\r\n    return (\r\n        <div id=\"contact-body-container\" className=\"container rounded\" >\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-home\"></i><p className=\"d-inline\"> Plainfield, IL 60585</p></h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-mobile-phone\"></i><a className=\"d-inline alien-color-link\" href=\"tel:18155570075\"> 815-557-0075</a></h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-envelope\"></i><p className=\"d-inline\"> ryanhutson5518@gmail.com</p></h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-linkedin-square\"></i><a className=\"d-inline alien-color-link\" href=\"https://www.linkedin.com/in/ryanhutson5518/\" target=\"_blank\" rel=\"noreferrer\"> linkedin.com</a></h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3><i className=\"fa fa-github\"></i><a className=\"d-inline alien-color-link\" href=\"https://github.com/ryanhutson5518\" target=\"_blank\" rel=\"noreferrer\"> github.com</a></h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactBody;\r\n","import React from 'react';\r\nimport ContactBody from './contactBody'\r\n\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div id=\"content-pages-background\">\r\n            <ContactBody />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className=\"container\" id=\"nav-container\">\r\n            <ul className=\"row text-center\" id=\"nav-row\">\r\n                <li className=\"col-12 col-md-3\">\r\n                    <NavLink to=\"/portfolio-website\" className=\"nav-link\">\r\n                        <h1>Ryan</h1>\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"col-12 col-md-3\">\r\n                    <Link to=\"/resume\" className=\"nav-link\">\r\n                        Resume\r\n                    </Link>\r\n                </li>\r\n                <li className=\"col-12 col-md-3\">\r\n                    <Link to=\"/projects\" className=\"nav-link\">\r\n                        Projects\r\n                    </Link>\r\n                </li>\r\n                <li className=\"col-12 col-md-3\">\r\n                    <Link to=\"/contact\" className=\"nav-link\">\r\n                        Contact\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Game = ({ content, handleInput, input }) => {\r\n  const [timer, setTimer] = useState(0);\r\n  let minutes = timer / 60;\r\n  let correctCharacters = 0;\r\n  const [WPM, setWPM] = useState(0);\r\n\r\n  const text = content.split(\"\");\r\n  const userInput = input;\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (correctCharacters !== 0) {\r\n        setTimer(timer + 1);\r\n        if (timer > 0) setWPM(Math.round(correctCharacters / 5 / minutes));\r\n      } else setTimer(0);\r\n    }, 1000);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"game-container row justify-content-center\">\r\n        <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n          {text.map((character, index) => {\r\n            let color;\r\n            if (index < userInput.length) {\r\n              color =\r\n                character === userInput[index]\r\n                  ? \"correct\"\r\n                  : \"incorrect d-block h1 display-1\";\r\n            }\r\n            if (character === userInput[index]) correctCharacters++;\r\n            return (\r\n              <span key={index} className={color}>\r\n                {character}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n        <textarea\r\n          value={input}\r\n          onInput={(event) => handleInput(event.target.value)}\r\n          autoFocus\r\n          spellCheck=\"false\"\r\n          autoCapitalize=\"false\"\r\n          autoCorrect=\"false\"\r\n          autoComplete=\"false\"\r\n          className=\"quote-input col-12 rounded\"\r\n          id=\"quoteInput\"\r\n        ></textarea>\r\n        <h1 className=\"col-12\">WPM: {WPM}</h1>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n\r\n// import React from 'react'\r\n\r\n// const Game = ({ content, handleInput, input }) => {\r\n//     const text = content.split(\"\");\r\n//     const userInput = input;\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div className=\"game-container row justify-content-center\">\r\n//                 <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n//                     {\r\n//                         text.map((character, index) => {\r\n//                             let color;\r\n//                             if (index < userInput.length) {\r\n//                                 color = character === userInput[index] ? \"correct\" : \"incorrect\";\r\n//                             }\r\n//                             return <span key={index} className={color}>{character}</span>\r\n//                         })\r\n//                     }\r\n//                 </div>\r\n//                 <textarea\r\n//                     value={input}\r\n//                     onInput={event => handleInput(event.target.value)}\r\n//                     autoFocus spellCheck=\"false\"\r\n//                     autoCapitalize=\"false\"\r\n//                     autoCorrect=\"false\"\r\n//                     autoComplete=\"false\"\r\n//                     className=\"quote-input col-12 rounded\"\r\n//                     id=\"quoteInput\"\r\n//                 >\r\n//                 </textarea>\r\n//                 <div className=\"timer col-12\" id=\"timer\">wpm: </div>\r\n//             </div>\r\n//         </React.Fragment>\r\n//     );\r\n// };\r\n\r\n// export default Game;\r\n\r\n// import React from 'react'\r\n\r\n// const Game = ({ content, handleInput, input }) => {\r\n//     const text = content.split(\"\");   // this is an array of every character\r\n//     const words = content.split(\" \");   // every word of content ... in an array\r\n//     const userInput = input;   // full text of user input\r\n//     const inputWords = userInput.split(\" \");   // every word the user types in. This is to compare the value with \"words\" so that if they are the same, I can add 1 to \"correctWordsCounter\"\r\n//     let correctWordsCounter = 0;\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div className=\"game-container row justify-content-center\">\r\n//                 <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n//                     {\r\n//                         text.map((character, index) => {\r\n//                             let color;\r\n//                             if (index < userInput.length) {\r\n//                                 color = character === userInput[index] ? \"correct\" : \"incorrect\";\r\n//                             }\r\n//                             if (color === \"correct\" && words[index] === inputWords[index]) {   // this is a check to see if the word is correct and both user input and content word is the same\r\n//                                 correctWordsCounter++;\r\n//                             }\r\n//                             return <span key={index} className={color}>{character}</span>\r\n//                         })\r\n//                     }\r\n//                 </div>\r\n//                 <textarea\r\n//                     value={input}\r\n//                     onInput={event => handleInput(event.target.value)}\r\n//                     autoFocus spellCheck=\"false\"\r\n//                     autoCapitalize=\"false\"\r\n//                     autoCorrect=\"false\"\r\n//                     autoComplete=\"false\"\r\n//                     className=\"quote-input col-12 rounded\"\r\n//                     id=\"quoteInput\"\r\n//                 >\r\n//                 </textarea>\r\n//                 <div className=\"timer col-12\" id=\"timer\">wpm: {correctWordsCounter}</div>\r\n//             </div>\r\n//         </React.Fragment>\r\n//     );\r\n// };\r\n\r\n// export default Game;\r\n\r\n// import React from 'react'\r\n\r\n// const Game = ({ content, handleInput, input }) => {\r\n//     const text = content.split(\"\");   // this is an array of every character\r\n//     const words = content.split(\" \");   // every word of content ... in an array\r\n//     const userInput = input;   // full text of user input\r\n//     const inputWords = userInput.split(\" \");   // every word the user types in. This is to compare the value with \"words\" so that if they are the same, I can add 1 to \"correctWordsCounter\"\r\n//     let correctWordsCounter = 0;\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div className=\"game-container row justify-content-center\">\r\n//                 <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n//                     {\r\n//                         text.map((character, index) => {\r\n//                             let color;\r\n//                             if (index < userInput.length) {\r\n//                                 color = character === userInput[index] ? \"correct\" : \"incorrect\";\r\n//                                 console.log(words[index])\r\n//                                 console.log(inputWords[index])\r\n//                             }\r\n//                             if (color === \"correct\" && words[index] === inputWords[index]) {   // this is a check to see if the word is correct and both user input and content word is the same\r\n//                                 correctWordsCounter++;\r\n//                             }\r\n//                             return <span key={index} className={color}>{character}</span>\r\n//                         })\r\n//                     }\r\n//                 </div>\r\n//                 <textarea\r\n//                     value={input}\r\n//                     onInput={event => handleInput(event.target.value)}\r\n//                     autoFocus spellCheck=\"false\"\r\n//                     autoCapitalize=\"false\"\r\n//                     autoCorrect=\"false\"\r\n//                     autoComplete=\"false\"\r\n//                     className=\"quote-input col-12 rounded\"\r\n//                     id=\"quoteInput\"\r\n//                 >\r\n//                 </textarea>\r\n//                 <div className=\"timer col-12\" id=\"timer\">wpm: {correctWordsCounter}</div>\r\n//             </div>\r\n//         </React.Fragment>\r\n//     );\r\n// };\r\n\r\n// export default Game;\r\n\r\n// import React, { useState, useEffect } from 'react'\r\n\r\n// const Game = ({ content, handleInput, input }) => {\r\n//     const [timer, setTimer] = useState(0);\r\n//     let minutes = timer / 60;\r\n//     let correctCharacters = 0;\r\n//     const [WPM, setWPM] = useState(0);\r\n\r\n//     const text = content.split(\"\");\r\n//     const userInput = input;\r\n\r\n//     useEffect(() => {\r\n//         setTimeout(() => {\r\n//             setTimer(timer + 1);\r\n//             if (correctCharacters !== 0) {\r\n//                 setWPM(Math.round((correctCharacters / 5) / minutes));\r\n//             }\r\n//         }, 1000);\r\n//     }, [timer, correctCharacters, minutes]);\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div className=\"game-container row justify-content-center\">\r\n//                 <div className=\"quote-display col-12\" id=\"quoteDisplay\">\r\n//                     {\r\n//                         text.map((character, index) => {\r\n//                             let color;\r\n//                             if (index < userInput.length) {\r\n//                                 color = character === userInput[index] ? \"correct\" : \"incorrect\";\r\n//                             }\r\n//                             if (character === userInput[index]) correctCharacters++;\r\n\r\n//                             return <span key={index} className={color}>{character}</span>\r\n//                         })\r\n//                     }\r\n//                 </div>\r\n//                 <textarea\r\n//                     value={input}\r\n//                     onInput={event => handleInput(event.target.value)}\r\n//                     autoFocus spellCheck=\"false\"\r\n//                     autoCapitalize=\"false\"\r\n//                     autoCorrect=\"false\"\r\n//                     autoComplete=\"false\"\r\n//                     className=\"quote-input col-12 rounded\"\r\n//                     id=\"quoteInput\"\r\n//                 >\r\n//                 </textarea>\r\n//                 <h1 className=\"col-12\">WPM: {WPM}</h1>\r\n//                 <h1 className=\"col-12\">timer: {timer}</h1>\r\n//                 <h1 className=\"col-12\">cc: {correctCharacters}</h1>\r\n//             </div>\r\n//         </React.Fragment>\r\n//     );\r\n// };\r\n\r\n// export default Game;\r\n","import React from 'react';\r\n\r\n\r\nconst Finished = () => {\r\n    return (\r\n        <h1>You have completed the test! Restart the browser to start again.</h1>\r\n    );\r\n};\r\n\r\nexport default Finished;","import React, { useState, useEffect } from \"react\";\r\nimport bibleVerses from \"../../services/deployment.json\"; // bibleVerses is the name of the array that I can use in my code\r\nimport Game from \"./game\";\r\nimport Finished from \"./finished\";\r\n\r\nconst TypingTest = () => {\r\n  const [state, setState] = useState(bibleVerses);\r\n  const [content, setContent] = useState(\"\"); // might have to add this back in ... the setContent\r\n  const [input, setInput] = useState(\"\"); // bind this to person typing\r\n\r\n  const handleInput = (text) => {\r\n    // This function starts all the other functions ... every time I input a character, this function runs ... so its a good spot to dynamically change the classes\r\n    setInput(text);\r\n    if (text === content) {\r\n      const newState = state.filter((index) => index.content !== content); // string is used here because I need the string value of content\r\n      setState(newState);\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContent(state[Math.floor(Math.random() * state.length)].content); // This is the updated state\r\n  }, [state]);\r\n\r\n  return (\r\n    <div id=\"content-pages-background\">\r\n      <div id=\"typingTestBody\" className=\"container\">\r\n        {state.length === 1 && input.length === content.length - 1 ? (\r\n          <Finished />\r\n        ) : (\r\n          <Game content={content} handleInput={handleInput} input={input} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingTest;\r\n\r\n// const [state, setState] = useState(bibleVerses);\r\n// const [content, setContent] = useState(\"\");   // might have to add this back in ... the setContent\r\n// const [input, setInput] = useState(\"\");  // bind this to person typing\r\n\r\n// const deleteContent = () => {\r\n//     let arrayToString = content;\r\n//     let string = \"\";\r\n//     for (let i in arrayToString) {\r\n//         string = string + arrayToString[i].props.children;\r\n//     }\r\n//     const newState = state.filter(index => index.content !== string);   // string is used here because I need the string value of content\r\n//     setState(newState);\r\n// };\r\n\r\n// const handleInput = text => {   // This function starts all the other functions ... every time I input a character, this function runs ... so its a good spot to dynamically change the classes\r\n//     setInput(text)\r\n//     inputCharacter = text;\r\n//     console.log(content[0].props.children)\r\n//     console.log(inputCharacter)\r\n// };\r\n\r\n// const getClass = character => {\r\n\r\n// };\r\n\r\n// useEffect(() => {\r\n//     if (content.length === input.length) {\r\n//         deleteContent();\r\n//     }\r\n// }, [input]);\r\n\r\n// useEffect(() => {\r\n//     setInput(\"\");\r\n// }, [content]);\r\n\r\n// useEffect(() => {\r\n//     setContent(state[Math.floor(Math.random() * state.length)].content.split(\"\").map((character, index) => <span key={index} className={getClass()}>{character}</span>));   // This is the updated state\r\n// }, [state]);\r\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport NotFound from './components/notFound';\nimport Home from './components/home/home';\nimport Resume from './components/resume/resume';\nimport Projects from './components/projects/projects';\nimport Contact from './components/contact/contact';\nimport NavBar from './components/common/navBar';\nimport TypingTest from './components/typingTest/typingTest';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/js/dist/collapse';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport './App.css';\nimport '../src/css/styles.min.css';\nimport '../src/css/alienButton.min.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <Switch>\n          <Route path=\"/portfolio-website\" component={Home} />\n          <Route path=\"/resume\" component={Resume} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/typing-test\" component={TypingTest} />\n          <Redirect exact from=\"/\" to=\"/portfolio-website\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}